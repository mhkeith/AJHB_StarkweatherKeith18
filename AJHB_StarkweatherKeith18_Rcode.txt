library(ggplot2)
library(reshape2)
library(gamlss)
library(pedantics)
library(MCMCglmm)
library(doParallel)

#WHO PERCENTILE PLOTS
#Plot data points with WHO percentile curves (10, 25, 50, 75, 90)
childdat<-read.csv("childgrowth019.csv") #Shodagor data for children ages 0-19
#WHO data for children ages 0-5: http://www.who.int/childgrowth/standards/en/ and ages 5-19: http://www.who.int/growthref/en/
#height-for-age and BMI-for-age 0-19 years, weight-for-age 0-10 years
#download and reformat WHO percentile tables in Excel (merge files across ages, convert age to years, merge across sexes)

#Height plot
WHOht<-read.csv("WHO_HTperc.csv")
#transform data into long format to plot curves and points with ggplot2 using melt function of reshape2
WHOhtM<-melt(WHOht, id.vars=c("Age","Sex"), measure.vars=c("P90","P75","P50","P25","P10"))
#overlay WHO curves onto Shodagor data points, split by sex
label <- as_labeller(c(`1` = "Males", `2` = "Females"))
htplot<-ggplot(childdat, aes(Age, Height)) 
hplot  + geom_point() + facet_wrap( ~ Sex, labeller=label) + xlab("Age (yr)") + ylab("Height (cm)") + theme_minimal() + theme(legend.title=element_text(size=8), legend.text=element_text(size=8)) + geom_line( data=WHOhtM, aes(x=Age, y=value, group=variable, color=variable)) + scale_colour_discrete(name="WHO Percentile", labels=c("P90","P75","P50","P25","P10")) 

#Weight plot
childdatW<-subset(childdat, Age<=10)
whowt<-read.csv("WHO_WTperc.csv")
WHOwtM<-melt(subwhowt, id.vars=c("Age","Sex"), measure.vars=c("P90","P75","P50","P25","P10"))
wtplot<-ggplot(childdatW, aes(Age, Weight))
wtplot  + geom_point() + facet_wrap( ~ Sex, labeller=label) + xlab("Age (yr)") + ylab("Weight (kg)") + theme_minimal() + theme(legend.title=element_text(size=8), legend.text=element_text(size=8)) + geom_line( data=WHOwtM, aes(x=Age, y=value, group=variable, color=variable)) + scale_colour_discrete(name="WHO Percentile", labels=c("P90","P75","P50","P25","P10"))

#BMI plot
WHObmi<-read.csv("WHO_BMIperc.csv")
WHObmiM<-melt(WHObmi, id.vars=c("Age","Sex"), measure.vars=c("P90","P75","P50","P25","P10"))
BMIplot<-ggplot(childdat, aes(Age, BMI))
BMIplot  + geom_point() + facet_wrap( ~ Sex, labeller=label) + xlab("Age (yr)") + ylab("BMI") + theme_minimal() + theme(legend.title=element_text(size=8), legend.text=element_text(size=8)) + geom_line( data=WHObmiM, aes(x=Age, y=value, group=variable, color=variable)) + scale_colour_discrete(name="WHO Percentile", labels=c("90", "75","50","25","10"))


#LMS TRANSFORMATIONS
#Transform outcome variables to account for age and sex
rdat<-read.csv("rdat.csv") #population-wide data file 
#Fit LMS curves (separately for each sex) using gamlss and z-score the residuals, use z-score outcomes in subsequent analyses

#Height
HTdatFe<-subset(rdat,Sex==2) #subset females 
#Truncate age to 30 for height and 50 for weight and BMI to correct for poor LMS fit at higher ages with few data points
HTdatFe$Age[HTdatFe$Age>30]<-30
HTlmsFe<-lms(Height,Age,data=na.omit(HTdatFe))
HTdatFe$zht<-z.scores(HTlmsFe,y=HTdatFe$Height,x=HTdatFe$Age)
HTdatMa<-subset(rdat, Sex==1) #subset males 
HTdatMa$Age[HTdatMa$Age>30]<-30
HTlmsMa<-lms(Height,Age,data=na.omit(HTdatMa))
HTdatMa$zht<-z.scores(HTlmsMa,y=HTdatMa$Height,x=HTdatMa$Age)
height<-rbind(HTdatFe,HTdatMa)

#Weight
WTdatFe<-subset(rdat,Sex==2) #subset females
WTdatFe$Age[WTdatFe$Age>50]<-50
WTlmsFe<-lms(Weight,Age,data=na.omit(WTdatFe))
WTdatFe$zwt<-z.scores(WTlmsFe,y=WTdatFe$Weight,x=WTdatFe$Age)
WTdatMa<-subset(rdat, Sex==1) #subset males
WTdatMa$Age[WTdatMa$Age>50]<-50
WTlmsMa<-lms(Weight,Age,data=na.omit(WTdatMa))
WTdatMa$zwt<-z.scores(WTlmsMa,y=WTdatMa$Weight,x=WTdatMa$Age)
weight<-rbind(WTdatFe,WTdatMa)

#BMI
BMIlmsFe<-lms(BMI,Age,data=na.omit(WTdatFe)) #Females
WTdatFe$zbmi<-z.scores(BMIlmsFe,y=WTdatFe$BMI,x=WTdatFe$Age)
BMIlmsMa<-lms(BMI,Age,data=na.omit(WTdatMa)) #Males 
WTdatMa$zbmi<-z.scores(BMIlmsMa,y=WTdatMa$BMI,x=WTdatMa$Age)
wtbmi<-rbind(WTdatFe,WTdatMa)

#merge z-score files together by ID
dat<-merge(height,wtbmi,by=c("ID"),all=TRUE)
save(dat,file="dat.Rda") #file with z-scores for everyone


#MIXED MODELS

#pedigree formatted for MCMCglmm with columns animal, dam, and sire
ped<-read.csv("pedigree.csv")

# data file with all non-categorical variables standardized
dat<-read.csv("data.csv")
#outcomes: z-scored height, weight, and BMI
#predictors: number of children, wife's income %, parental education, wife's decision-making, time to market, distance to Meghna, Household income, Access to fish, Household income * Access to fish
#partition by "type": child, mother, father
#estimating 2 random effects: genetic (based on identity ("animal") within pedigree) and Household (identifier "House") 

cl <- makeCluster(3) #using 3 cores for 3 models
registerDoParallel(cl)

prior <- list(R=list(V=1, nu=0.002), G=list(G1=list(V=1,nu=1,alpha.mu=0,alpha.v=1000),
                                            G2=list(V=1,nu=1,alpha.mu=0,alpha.v=1000)))

system.time(models <- foreach(i=1:3) %dopar% {
  # list of formulas for 3 models
  forml<-list(as.formula(zht ~ (Type*NumKidsS) + (Type*ParentEducation) + (Type*MoDecide) + (Type*TimeToMarketS)  + (Type*WifeIncPercS) + (Type*DistanceToMeghnaS) + (Type*IncomeLogS*Fish_Avail) +1), 
              as.formula(zwt ~ (Type*NumKidsS)  + (Type*ParentEducation) + (Type*MoDecide) + (Type*TimeToMarketS)  + (Type*WifeIncPercS) + (Type*DistanceToMeghnaS) + (Type*IncomeLogS*Fish_Avail) +1), 
              as.formula(zbmi ~ (Type*NumKidsS)  + (Type*ParentEducation) + (Type*MoDecide) + (Type*TimeToMarketS)  + (Type*WifeIncPercS) + (Type*DistanceToMeghnaS) + (Type*IncomeLogS*Fish_Avail) +1))
  
  MCMCglmm( forml[[i]],
            random=~animal + House,
            data=dat,
            pedigree=ped,
            prior=prior,
            nitt = 10500000, thin = 10000, burnin = 500000,
            verbose=FALSE)
})

#Raw genetic and household variance components
VCV<-mcmc.list(models[[1]]$VCV[,"animal"], models[[1]]$VCV[,"House"], models[[1]]$VCV[,"units"], models[[2]]$VCV[,"animal"], models[[2]]$VCV[,"House"],models[[2]]$VCV[,"units"], models[[3]]$VCV[,"animal"], models[[3]]$VCV[,"House"], models[[3]]$VCV[,"units"])
names(VCV)<-c("HTanimal","HThouse","HTunits","WTanimal","WThouse","WTunits","BMIanimal","BMIhouse","BMIunits")
V.mode<-lapply(VCV,posterior.mode)
V.90<-lapply(VCV,HPDinterval,prob=0.90) #90% credible intervals

#Variance component ratios
VCratio<-function(x,y,z) {x/(x+y+z)}
#Heritabilities
h2HT<-VCratio(x=VCV$HTanimal,y=VCV$HThouse,z=VCV$HTunits) #height
h2WT<-VCratio(x=VCV$WTanimal,y=VCV$WThouse,z=VCV$WTunits) #weight 
h2BMI<-VCratio(x=VCV$BMIanimal,y=VCV$BMIhouse,z=VCV$BMIunits) #BMI
#Household Effects
heHT<-VCratio(x=VCV$HThouse,y=VCV$HTanimal,z=VCV$HTunits) #height
heWT<-VCratio(x=VCV$WThouse,y=VCV$WTanimal,z=VCV$WTunits) #weight
heBMI<-VCratio(x=VCV$BMIhouse,y=VCV$BMIanimal,z=VCV$BMIunits) #BMI


# function for marginal and conditional R2 from MCMCglmm models
# the input argument is an MCMCglmm object = m
# output object is a 3 column matrix with the fixed effects variance (sigF) and the two R2s in mcmc class so posterior.mode and other functions can be run on it
mcmcR2 <- function(m){
  X <- as.matrix(m$X)
  sigF <- apply(m$Sol[,1:ncol(X)], 1, function(z) var(as.vector(z %*% t(X))) )
  R2m <- sigF / ( sigF + rowSums(m$VCV) )
  if(ncol(m$VCV)==2){nv<-m$VCV[,-which(colnames(m$VCV)=="units")]}
  else{nv<-rowSums(m$VCV[,-which(colnames(m$VCV)=="units")])}
  R2c <- (sigF + nv) / ( sigF + rowSums(m$VCV))
  outmc <- matrix(NA,nrow=length(sigF),ncol=3)
  outmc[,1] <- sigF
  outmc[,2] <- R2m
  outmc[,3] <- R2c
  colnames(outmc) <- c("sigF","R2m","R2c")
  class(outmc) <- "mcmc"
  attr(outmc,"mcpar") <- attr(m$Sol,"mcpar")
  return( outmc )
}

R2<-as.data.frame(lapply(models,mcmcR2))
names(R2)<-c("sigFHT", "R2mHT", "R2cHT","sigFWT","R2mWT","R2cWT","sigFBMI","R2mBMI","R2cBMI") 
R2.mode<-lapply(R2, posterior.mode)
R2.90<-lapply(R2, quantile, probs=c(0.05,0.95)) #90% credible intervals